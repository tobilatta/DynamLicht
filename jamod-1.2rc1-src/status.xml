<?xml version="1.0"?><status>  <developers>    <person name="Dieter Wimberger" email="wimpi at users.sourceforge.net" id="wimpi"/>	  <person name="John Charlton" email="jdcharlton at users.sourceforge.net" id="jdcharlton"/>    <!-- Add more people here -->  </developers>  <changes>    <!-- Add new releases here -->	<release version="1.2" date="@date@">	  <action dev="wimpi" type="update">	    Updated source and build script to allow dual build for normal and embedded systems. 	    Certain API was not supported for SNAP/Tini like API's and thus needs to be avoided	    as long as it is not a mayor inconvenience.	  </action>	  <action dev="wimpi" type="fix" fixes-bug="981328" due-to="Markus Kuespert">	    Fixed problem reported as Bug #981328 "ClassCastException in ModbusTCPMaster.readInputRegisters()".	  </action>	  <action dev="wimpi" type="fix" fixes-bug="981328" due-to="Markus Kuespert">	    Fixed problem reported as Bug #981328 "ClassCastException in ModbusTCPMaster.readInputRegisters()".	  </action>	  <action dev="wimpi" type="fix" fixes-bug="981332" due-to="Markus Kuespert">	    Fixed problem reported as Bug #981332 "TCPMasterConnection: connect() and close() may throw NPE".		  Also udpated other connection with some basic assertions.	  </action>    <action dev="wimpi" type="fix" fixes-bug="990579" due-to="Matthew Lohbihler">      Fixed problem with the ASCIIInputStream read() causing troubles with invalid messages.    </action>    <action dev="wimpi" type="fix" fixes-bug="990586" due-to="Matthew Lohbihler">      Fixed problem with the ModbusASCIITransport readResponse() (removed nonsense Unit ID check).    </action>    <action dev="wimpi" type="fix" fixes-bug="990590" due-to="Matthew Lohbihler">      Fixed problems with the ModbusASCIIITransport LRC byte indexing in readResponse() and readRequest().    </action>    <action dev="wimpi" type="fix" fixes-bug="990578" due-to="Matthew Lohbihler, Dieter Wimberger">      Fixed problems with SerialParameters and changed everything to LOWERCASE. String.equalsIgnoreCase(String) is      not supported in some Java 1 Implementations (like SNAP).    </action>    <action dev="wimpi" type="fix">      Corrected reference to point to jamod CVS in documentation menu.    </action>    <action dev="wimpi" type="add">      Added Modbus/BIN (new serial flavor) implementation and documentation.    </action>    <action dev="wimpi" type="fix" fixes-bug="1025400" due-to="Shane Harrison">      Fixed problem reported as bug #1025400 "CRC byte ordering in RTU mode incorrect".      Note that the CRC calculation has been moved to the ModbusUtil and is also      used for the ModbusBINTransport.    </action>    <action dev="wimpi" type="add">      Added support for build depending on gnu.io and RXTXcomm.jar.    </action>    <action dev="wimpi" type="fix" due-to="John Charlton">      Fixed problem with stream inheritance for all serial input and      output streams.    </action>    <action dev="jdcharlton" type="update">      Refactored ModbusSerialTransport and subclasses and converted to abstract base      class. Modified SerialConnection to set the CommPort member of      ModbusSerialTransport which calls the prepareStreams abstract method for      subclasses.  Cleaned up and refactored RS-485 echo processing, and timeout      handling.  Implemented retry in ModbusSerialTransaction execute method.    </action>    <action dev="jdcharlton" type="add">      Added facade/ModbusSerialMaster and associated test driver cmd/SerialFacadeTest      to simplify implementing modbus serial masters.    </action>    <action dev="wimpi" type="update">      Refactored BitVector to ensure it works properly and is less confusing to use.      The default start index (i.e. 0) will now ALWAYS refer to the LSB (rightmost bit);      setStartLSB() has been removed, instead toggleAccess(), isMSBAccess()      and isLSBAccess()have been added; toString() will now ALWAYS have the MSB      as the leftmost and the LSB as the rightmost bit in each byte,      no matter what access type has been set. This seems to be much less confusing      during debugging;    </action>    <action dev="wimpi" type="add">      Added new factory method to BitVector that allows to pass a bit count.      Added method to allow forcing the bit count of the BitVector instance      within the limit of the byte[] store for the bits.    </action>    <action dev="wimpi" type="fix">      Fixes to various places in the code where the BitVector is used.    </action>    <action dev="wimpi" type="update">      Refactored WriteMultipleRegisters to accept a BitVector in constructor      and added a setter. The bitcount is now exclusively handled through      the associated BitVector instance.    </action>    <action dev="wimpi" type="update">      Changed ModbusCoupler Singleton to static initialization and removed      factory methods and its uses throughout the code (cmd package).    </action>    <action dev="wimpi" type="update">      InputRegister and Register instances in the default function messages      will now be created using the factory instance obtained from      the ModbusCoupler singleton.    </action>    <action dev="wimpi" type="update">      Refactored all facades to have equal and more Java like signatures      for the default master function methods.      The number of returned elements is ruled by the slave response, except      in the case of the function for reading multiple coils and input discretes      (the bitcount is forced to the number requested, as it is not contained in      the slave response).    </action>	</release>	  <release version="1.1" date="06/06/2004">    <!-- Some action types have associated images. By default, images are    defined for 'add', 'fix', 'remove', 'update' and 'hack'. If you add    src/documentation/resources/images/<foo>.jpg images, these will    automatically be used for entries of type <foo>. -->    <action dev="wimpi" type="add">      Converted and updated documentation to XML and forrest based generation.    </action>    <action dev="jdcharlton" type="add">	    Added Modbus/RTU Implementation (Master)	  </action>	  <action dev="jdcharlton" type="add">	    Added Modbus Serial Echo support (RS485)	  </action>	  <action dev="wimpi" type="add">      Updated BitVector to support starting index from LSB or MSB    </action>	  <action dev="wimpi" type="update">	    Updated registers and base functions to handle register content as byte[2].	  </action>	  <action dev="wimpi" type="update">	    Updated debug messages to be triggered by net.wimpi.modbus.debug property, that		  can be passed to the VM on startup.	  </action> 	  <action dev="wimpi" type="update">	    Updated LRC calculation.	  </action>	  <action dev="wimpi" type="add">	    Reduced overhead and enhanced speed by changing the way message I/O	  	is handled (see Transportable, FastByteArray I/O)    </action>	  <action dev="wimpi" type="add">	    Added missing standard request and response for WRITE MULTIPLE COILS    </action>	  <action dev="wimpi" type="add">      Added facades providing Modbus/TCP and Modbus/UDP master functionality    </action>	  <action dev="wimpi" type="add">      Added  Modbus/UDP Implementation and documentation.    </action>  </release>	<release version="1.0fix2" date="10/11/2002">	  <action dev="wimpi" type="fix" fixes-bug="610142,616218">	    Fixed Bug #610142 "ReadMultipleRegistersResponse Index" (and duplicate #616218)	  </action>	  <action dev="wimpi" type="fix" fixes-bug="625113" due-to="blah blah">	     Fixed problems reported as Bug #625113 "several bugs with fixes"	  </action>	  <action dev="wimpi" type="add">	    Updated and added a lot of documentation.	  </action>	</release>	<release version="1.0fix1" date="08/08/2002">	  <action dev="wimpi" type="fix" fixes-bug="554158">	    Fixed severe Bug #554158 "Transaction retry loop does not break"	  </action>	  <action dev="wimpi" type="update">	     Removed console debug outputs which remained uncommented in the release 1.0	  </action>	</release>  	<release version="1.0" date="07/03/2002">	  <action dev="wimpi" type="add">	    Initial public release.	  </action> 	</release>  </changes>  <todo>    <!-- Add _todo items. @context is an arbitrary string. Eg:    <actions priority="high">      <action context="code" dev="SN">      </action>    </actions>    <actions priority="medium">      <action context="docs" dev="open">      </action>    </actions>    -->  </todo></status>