<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "document-v12.dtd"><document>   <header>     <title>Building jamod</title>    <version>1.2rc1 (09/11/2004)</version>    <authors>      <person name="Dieter Wimberger" email=" wimpi@users.sourceforge.net "/>    </authors>  </header>   <body>    <section>      <title>About</title>      <p>      This document describes how to build jamod from the source package.      </p>    </section>    <section>      <title>Invoking the build</title>      <p>      jamod's build is based on Apache <link href="ext:ant">ant</link> and <em>requires =v1.6 to      be properly installed on your system</em> and available from the command line.      </p>      <warning>      The only supported way for building this library is via the delivered build scripts for ant.      (Most IDE's nowadays provide ant integration or at least support anyway.)      </warning>      <note>      Documentation builds are based on Apache <link href="ext:forrest">forrest</link>. To invoke these      you will need release version 0.6 installed on your system.      </note>      <dl>        <dt><strong>Standard JDK Builds</strong></dt>        <dd>          The build script that needs to be invoked by ant is <em>build.xml</em>. This is the default          so if you do not pass the file parameter, this file will be used.        </dd>        <dt><strong>SNAP Builds</strong></dt>        <dd>          The build script that needs to be invoked by ant is <em>build-snap.xml</em>. You will need          to pass it using the <code>-f</code> file parameter for ant. We have successfully build jamod for SNAP           firmware <em>=0.17.0</em>        </dd>      </dl>      <p>      To see the build targets and the default target, you should invoke ant with the option       <em>-projecthelp</em>      </p>      </section>    <section>      <title>Build Properties</title>      <p>        Build properties will be read from your home directory (<code>.build.properties</code>) or from the actual         directory (<code>build.properties</code>).<br/>        These allow you to toggle flags for the building procedure (standard build.properties file):      </p>      <source># Compiler to be usedbuild.compiler=modern     # Flag for building against the RXTX library (with gnu.io prefix)build.serial.gnu=false#build.serial.gnu=true# Deprecation warningscompile.deprecation=on## Optimization and Debug# Development Setcompile.optimize=offcompile.debug=on# Production/Release set#compile.optimize=on#compile.debug=offjavadocs.additionalparam=-breakiterator      </source>      <p>        There are additional properties that need to be set for the SNAP build (also see example):      </p>      <dl>        <dt><code>snap.firmware</code></dt>        <dd>the path to the directory where you have stored the SNAP firmware</dd>        <dt><code>preverify.bin</code></dt>        <dd>The path to the binary used for preverification <code>preverify</code>.</dd>      </dl>      <source>#SNAP has javax.comm interfaces, building for RXTX makes no sense at allbuild.serial.gnu=falsesnap.firmware=/Data/Resources/SNAP/snap0.17.0preverify.bin=/usr/bin/preverify            </source>    </section>    <note>      All build products including the docs and the distributions will be written to the       <em>build</em> directory.    </note>  </body></document>